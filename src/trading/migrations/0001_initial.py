# Generated by Django 5.2.7 on 2025-10-16 19:09

import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "account_type",
                    models.CharField(
                        choices=[("personal", "Personal"), ("prop_firm", "Prop Firm")],
                        max_length=50,
                    ),
                ),
                ("broker", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "initial_balance",
                    models.DecimalField(decimal_places=8, max_digits=20),
                ),
                (
                    "current_balance",
                    models.DecimalField(decimal_places=8, max_digits=20),
                ),
                ("currency", models.CharField(default="USDT", max_length=10)),
                ("api_key_encrypted", models.TextField(blank=True, null=True)),
                ("api_secret_encrypted", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account_metadata",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
            ],
            options={
                "db_table": "accounts",
                "ordering": ["-created_at"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BacktestResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=20)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                (
                    "initial_capital",
                    models.DecimalField(decimal_places=8, max_digits=20),
                ),
                ("final_capital", models.DecimalField(decimal_places=8, max_digits=20)),
                ("total_return", models.FloatField()),
                ("sharpe_ratio", models.FloatField()),
                ("max_drawdown", models.FloatField()),
                ("win_rate", models.FloatField()),
                ("total_trades", models.IntegerField()),
                ("parameters", models.JSONField(default=dict)),
                ("equity_curve", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "backtest_results",
                "ordering": ["-created_at"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BalanceHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_balance", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "available_balance",
                    models.DecimalField(decimal_places=8, max_digits=20),
                ),
                (
                    "reserved_balance",
                    models.DecimalField(
                        decimal_places=8, default=Decimal("0"), max_digits=20
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "db_table": "balance_history",
                "ordering": ["-timestamp"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=20)),
                (
                    "side",
                    models.CharField(
                        choices=[("LONG", "Long"), ("SHORT", "Short")],
                        db_column="position_type",
                        max_length=10,
                    ),
                ),
                ("quantity", models.DecimalField(decimal_places=8, max_digits=20)),
                ("entry_price", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "current_price",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "unrealized_pnl",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "unrealized_pnl_percent",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                (
                    "stop_loss",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "take_profit",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("closed", "Closed"),
                            ("liquidated", "Liquidated"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                (
                    "position_metadata",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                ("opened_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "positions",
                "ordering": ["-opened_at"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Signal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=20)),
                (
                    "signal_type",
                    models.CharField(
                        choices=[("buy", "Buy"), ("sell", "Sell"), ("hold", "Hold")],
                        max_length=10,
                    ),
                ),
                ("price", models.DecimalField(decimal_places=8, max_digits=20)),
                ("confidence", models.FloatField(default=0.0)),
                ("indicators", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "signals",
                "ordering": ["-created_at"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Strategy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("parameters", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("testing", "Testing"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("performance_metrics", models.JSONField(blank=True, default=dict)),
                ("strategy_metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Strategies",
                "db_table": "strategies",
                "ordering": ["-created_at"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Trade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time", models.DateTimeField()),
                ("symbol", models.CharField(max_length=20)),
                (
                    "trade_type",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")], max_length=10
                    ),
                ),
                (
                    "position_side",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LONG", "Long"),
                            ("SHORT", "Short"),
                            ("BOTH", "Both"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("quantity", models.DecimalField(decimal_places=8, max_digits=20)),
                ("price", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "fee",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "fee_currency",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "realized_pnl",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "stop_loss",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "take_profit",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                ("order_type", models.CharField(blank=True, max_length=20, null=True)),
                ("order_id", models.CharField(blank=True, max_length=100, null=True)),
                ("is_entry", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "strategy_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "trade_metadata",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "trades",
                "ordering": ["-time"],
                "managed": False,
            },
        ),
    ]
