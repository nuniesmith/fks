name: Project Health Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install pytest pytest-cov pip-audit ruff mypy
    
    - name: Run tests
      run: |
        cd src
        pytest ../tests/ -v --cov=. --cov-report=term --cov-report=json
      continue-on-error: true
    
    - name: Security audit
      run: |
        pip-audit --requirement requirements.txt --format json > security-audit.json || true
      continue-on-error: true
    
    - name: Lint check
      run: |
        ruff check src/ --output-format=json > lint-report.json || true
      continue-on-error: true
    
    - name: Type check
      run: |
        mypy src/ --ignore-missing-imports --json-report mypy-report || true
      continue-on-error: true
    
    - name: Generate project metrics
      run: |
        python scripts/analyze_project.py --output=metrics.json
      continue-on-error: true
    
    - name: Update PROJECT_STATUS.md
      run: |
        python .github/scripts/update_status.py
      continue-on-error: true
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: health-check-reports
        path: |
          coverage.json
          security-audit.json
          lint-report.json
          mypy-report/
          metrics.json
    
    - name: Comment PR with summary
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const coverage = JSON.parse(fs.readFileSync('coverage.json', 'utf8'));
          const body = `## üè• Health Check Results
          
          **Test Coverage**: ${coverage.totals.percent_covered.toFixed(1)}%
          **Tests Passing**: Check artifacts for details
          
          View full reports in workflow artifacts.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
