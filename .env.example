# .env.example
# Copy this file to .env and fill in your values
# ⚠️ NEVER commit the actual .env file with real secrets!

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
POSTGRES_USER=fks_user
POSTGRES_PASSWORD=your_secure_password_here_min_16_chars
POSTGRES_DB=trading_db
POSTGRES_HOST=db
POSTGRES_PORT=5432

# pgAdmin Configuration
PGADMIN_EMAIL=admin@fks.local
PGADMIN_PASSWORD=your_pgadmin_password_here

# ============================================================================
# MONITORING & OBSERVABILITY
# ============================================================================
# Grafana
GRAFANA_USER=admin
GRAFANA_PASSWORD=admin

# Tailscale VPN Configuration
# Get your auth key from: https://login.tailscale.com/admin/settings/keys
# Use ephemeral or reusable key with appropriate tags
TAILSCALE_AUTH_KEY=tskey-auth-xxxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxx
TAILSCALE_HOSTNAME=fks-trading

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# ============================================================================
# DJANGO CONFIGURATION
# ============================================================================
# Generate with: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
DJANGO_SECRET_KEY=your-django-secret-key-here-50-chars-minimum

# ============================================================================
# EXTERNAL SERVICES (Optional)
# ============================================================================
# Discord Webhook for notifications
DISCORD_WEBHOOK_URL=

# Binance API for live trading
BINANCE_API_KEY=
BINANCE_SECRET_KEY=

# OpenAI for GPT models (if not using local LLM)
OPENAI_API_KEY=

# Netdata Cloud monitoring
NETDATA_CLAIM_TOKEN=
NETDATA_CLAIM_ROOMS=
