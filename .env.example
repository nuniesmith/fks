# .env.example
# Copy this file to .env and fill in your values
# ⚠️ NEVER commit the actual .env file with real secrets!

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
# Generate strong password: openssl rand -base64 32
POSTGRES_USER=fks_user
POSTGRES_PASSWORD=CHANGE_ME_openssl_rand_base64_32_minimum
POSTGRES_DB=trading_db
POSTGRES_HOST=db
POSTGRES_PORT=5432

# PostgreSQL SSL Configuration (Production recommended)
# Set to 'on' to enable SSL/TLS encryption for database connections
POSTGRES_SSL_ENABLED=on
# Authentication method: scram-sha-256 is more secure than md5
POSTGRES_HOST_AUTH_METHOD=scram-sha-256
# SSL certificate paths (auto-generated by PostgreSQL if not provided)
# POSTGRES_SSL_CERT_FILE=/var/lib/postgresql/server.crt
# POSTGRES_SSL_KEY_FILE=/var/lib/postgresql/server.key

# pgAdmin Configuration
PGADMIN_EMAIL=admin@fks.local
# Generate strong password: openssl rand -base64 24
PGADMIN_PASSWORD=CHANGE_ME_openssl_rand_base64_24_minimum

# ============================================================================
# MONITORING & OBSERVABILITY
# ============================================================================
# Grafana
GRAFANA_USER=admin
# Generate strong password: openssl rand -base64 24
GRAFANA_PASSWORD=CHANGE_ME_openssl_rand_base64_24_minimum

# Tailscale VPN Configuration
# Get your auth key from: https://login.tailscale.com/admin/settings/keys
# Use ephemeral or reusable key with appropriate tags
TAILSCALE_AUTH_KEY=tskey-auth-xxxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxx
TAILSCALE_HOSTNAME=fks-trading

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
# Generate strong password: openssl rand -base64 32
REDIS_PASSWORD=CHANGE_ME_openssl_rand_base64_32_minimum

# ============================================================================
# DJANGO CONFIGURATION
# ============================================================================
# Generate with: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
DJANGO_SECRET_KEY=CHANGE_ME_use_django_get_random_secret_key_command

# ============================================================================
# EXTERNAL SERVICES (Optional)
# ============================================================================
# Discord Webhook for notifications
DISCORD_WEBHOOK_URL=

# Binance API for live trading
BINANCE_API_KEY=
BINANCE_SECRET_KEY=

# OpenAI for GPT models (if not using local LLM)
OPENAI_API_KEY=
